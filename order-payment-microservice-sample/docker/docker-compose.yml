version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - default
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - default
  order-service:
    container_name: order-service
    image: toannguyenpersonify/order-service:3.1
    build:
      #context: ../order-service
      args:
        - APP_NAME=order-service
        - APP_VERSION=1.0-SNAPSHOT
    depends_on:
      - order-postres
      - kafka
      - zookeeper
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-postres:5432/orderdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    networks:
      - default
      - order
  stock-service:
    container_name: stock-service
    image: toannguyenpersonify/stock-service:3.1
    build:
      #context: ../order-service
      args:
        - APP_NAME=stock-service
        - APP_VERSION=1.0-SNAPSHOT
    depends_on:
      - stock-postres
      - kafka
      - order-service
    ports:
      - 8081:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stock-postres:5432/stockdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    networks:
      - stock
      - default
  payment-service:
    container_name: payment-service
    image: toannguyenpersonify/payment-service:3.1
    build:
      #context: ../order-service
      args:
        - APP_NAME=payment-service
        - APP_VERSION=1.0-SNAPSHOT
    depends_on:
      - payment-postres
      - kafka
      - order-service
    ports:
      - 8082:8082
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://payment-postres:5432/paymentdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    networks:
      - default
      - payment
  payment-postres:
    image: postgres:alpine
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: paymentdb
    networks:
      - payment
  stock-postres:
    image: postgres:alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: stockdb
    networks:
      - stock
  order-postres:
    image: postgres:alpine
    ports:
      - "5435:5432"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: orderdb
    networks:
      - order
networks:
  default:
  order:
  stock:
  payment: